// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "order.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tutorial {

namespace {

const ::google::protobuf::Descriptor* order_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  order_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_order_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_order_2eproto() {
  protobuf_AddDesc_order_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "order.proto");
  GOOGLE_CHECK(file != NULL);
  order_descriptor_ = file->message_type(0);
  static const int order_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(order, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(order, serialno_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(order, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(order, operator__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(order, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(order, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(order, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(order, amount_),
  };
  order_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      order_descriptor_,
      order::internal_default_instance(),
      order_offsets_,
      -1,
      -1,
      -1,
      sizeof(order),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(order, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_order_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      order_descriptor_, order::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_order_2eproto() {
  order_default_instance_.Shutdown();
  delete order_reflection_;
}

void protobuf_InitDefaults_order_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  order_default_instance_.DefaultConstruct();
  order_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_order_2eproto_once_);
void protobuf_InitDefaults_order_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_order_2eproto_once_,
                 &protobuf_InitDefaults_order_2eproto_impl);
}
void protobuf_AddDesc_order_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_order_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013order.proto\022\010tutorial\"\207\001\n\005order\022\016\n\006act"
    "ion\030\001 \001(\005\022\020\n\010serialNo\030\002 \001(\t\022\017\n\007version\030\003"
    " \001(\t\022\020\n\010operator\030\004 \001(\t\022\014\n\004code\030\005 \003(\t\022\014\n\004"
    "name\030\006 \001(\t\022\r\n\005price\030\007 \001(\t\022\016\n\006amount\030\010 \001("
    "\tb\006proto3", 169);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "order.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_order_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_order_2eproto_once_);
void protobuf_AddDesc_order_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_order_2eproto_once_,
                 &protobuf_AddDesc_order_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_order_2eproto {
  StaticDescriptorInitializer_order_2eproto() {
    protobuf_AddDesc_order_2eproto();
  }
} static_descriptor_initializer_order_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int order::kActionFieldNumber;
const int order::kSerialNoFieldNumber;
const int order::kVersionFieldNumber;
const int order::kOperatorFieldNumber;
const int order::kCodeFieldNumber;
const int order::kNameFieldNumber;
const int order::kPriceFieldNumber;
const int order::kAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

order::order()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_order_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.order)
}

void order::InitAsDefaultInstance() {
}

order::order(const order& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tutorial.order)
}

void order::SharedCtor() {
  serialno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operator__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_ = 0;
  _cached_size_ = 0;
}

order::~order() {
  // @@protoc_insertion_point(destructor:tutorial.order)
  SharedDtor();
}

void order::SharedDtor() {
  serialno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operator__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void order::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* order::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return order_descriptor_;
}

const order& order::default_instance() {
  protobuf_InitDefaults_order_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<order> order_default_instance_;

order* order::New(::google::protobuf::Arena* arena) const {
  order* n = new order;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void order::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.order)
  action_ = 0;
  serialno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operator__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.Clear();
}

bool order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.order)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 action = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_serialNo;
        break;
      }

      // optional string serialNo = 2;
      case 2: {
        if (tag == 18) {
         parse_serialNo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serialno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serialno().data(), this->serialno().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.order.serialNo"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_version;
        break;
      }

      // optional string version = 3;
      case 3: {
        if (tag == 26) {
         parse_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.order.version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_operator;
        break;
      }

      // optional string operator = 4;
      case 4: {
        if (tag == 34) {
         parse_operator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operator_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operator_().data(), this->operator_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.order.operator"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_code;
        break;
      }

      // repeated string code = 5;
      case 5: {
        if (tag == 42) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->code(this->code_size() - 1).data(),
            this->code(this->code_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.order.code"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_code;
        if (input->ExpectTag(50)) goto parse_name;
        break;
      }

      // optional string name = 6;
      case 6: {
        if (tag == 50) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.order.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_price;
        break;
      }

      // optional string price = 7;
      case 7: {
        if (tag == 58) {
         parse_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->price().data(), this->price().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.order.price"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_amount;
        break;
      }

      // optional string amount = 8;
      case 8: {
        if (tag == 66) {
         parse_amount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->amount().data(), this->amount().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.order.amount"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.order)
  return false;
#undef DO_
}

void order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.order)
  // optional int32 action = 1;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->action(), output);
  }

  // optional string serialNo = 2;
  if (this->serialno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serialno().data(), this->serialno().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.serialNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->serialno(), output);
  }

  // optional string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // optional string operator = 4;
  if (this->operator_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operator_().data(), this->operator_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.operator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->operator_(), output);
  }

  // repeated string code = 5;
  for (int i = 0; i < this->code_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code(i).data(), this->code(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.code");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->code(i), output);
  }

  // optional string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // optional string price = 7;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->price(), output);
  }

  // optional string amount = 8;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), this->amount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.amount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->amount(), output);
  }

  // @@protoc_insertion_point(serialize_end:tutorial.order)
}

::google::protobuf::uint8* order::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.order)
  // optional int32 action = 1;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->action(), target);
  }

  // optional string serialNo = 2;
  if (this->serialno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serialno().data(), this->serialno().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.serialNo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->serialno(), target);
  }

  // optional string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // optional string operator = 4;
  if (this->operator_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operator_().data(), this->operator_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.operator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->operator_(), target);
  }

  // repeated string code = 5;
  for (int i = 0; i < this->code_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->code(i).data(), this->code(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.code");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->code(i), target);
  }

  // optional string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // optional string price = 7;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->price(), target);
  }

  // optional string amount = 8;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->amount().data(), this->amount().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.order.amount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->amount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tutorial.order)
  return target;
}

size_t order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.order)
  size_t total_size = 0;

  // optional int32 action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action());
  }

  // optional string serialNo = 2;
  if (this->serialno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serialno());
  }

  // optional string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // optional string operator = 4;
  if (this->operator_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operator_());
  }

  // optional string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string price = 7;
  if (this->price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price());
  }

  // optional string amount = 8;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amount());
  }

  // repeated string code = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->code_size());
  for (int i = 0; i < this->code_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->code(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.order)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const order* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const order>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.order)
    UnsafeMergeFrom(*source);
  }
}

void order::MergeFrom(const order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.order)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void order::UnsafeMergeFrom(const order& from) {
  GOOGLE_DCHECK(&from != this);
  code_.UnsafeMergeFrom(from.code_);
  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.serialno().size() > 0) {

    serialno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialno_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.operator_().size() > 0) {

    operator__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operator__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.price().size() > 0) {

    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  if (from.amount().size() > 0) {

    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
}

void order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void order::CopyFrom(const order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.order)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool order::IsInitialized() const {

  return true;
}

void order::Swap(order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void order::InternalSwap(order* other) {
  std::swap(action_, other->action_);
  serialno_.Swap(&other->serialno_);
  version_.Swap(&other->version_);
  operator__.Swap(&other->operator__);
  code_.UnsafeArenaSwap(&other->code_);
  name_.Swap(&other->name_);
  price_.Swap(&other->price_);
  amount_.Swap(&other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata order::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = order_descriptor_;
  metadata.reflection = order_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// order

// optional int32 action = 1;
void order::clear_action() {
  action_ = 0;
}
::google::protobuf::int32 order::action() const {
  // @@protoc_insertion_point(field_get:tutorial.order.action)
  return action_;
}
void order::set_action(::google::protobuf::int32 value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:tutorial.order.action)
}

// optional string serialNo = 2;
void order::clear_serialno() {
  serialno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& order::serialno() const {
  // @@protoc_insertion_point(field_get:tutorial.order.serialNo)
  return serialno_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void order::set_serialno(const ::std::string& value) {
  
  serialno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.order.serialNo)
}
void order::set_serialno(const char* value) {
  
  serialno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.order.serialNo)
}
void order::set_serialno(const char* value, size_t size) {
  
  serialno_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.order.serialNo)
}
::std::string* order::mutable_serialno() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.order.serialNo)
  return serialno_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* order::release_serialno() {
  // @@protoc_insertion_point(field_release:tutorial.order.serialNo)
  
  return serialno_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void order::set_allocated_serialno(::std::string* serialno) {
  if (serialno != NULL) {
    
  } else {
    
  }
  serialno_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialno);
  // @@protoc_insertion_point(field_set_allocated:tutorial.order.serialNo)
}

// optional string version = 3;
void order::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& order::version() const {
  // @@protoc_insertion_point(field_get:tutorial.order.version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void order::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.order.version)
}
void order::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.order.version)
}
void order::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.order.version)
}
::std::string* order::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.order.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* order::release_version() {
  // @@protoc_insertion_point(field_release:tutorial.order.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void order::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:tutorial.order.version)
}

// optional string operator = 4;
void order::clear_operator_() {
  operator__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& order::operator_() const {
  // @@protoc_insertion_point(field_get:tutorial.order.operator)
  return operator__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void order::set_operator_(const ::std::string& value) {
  
  operator__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.order.operator)
}
void order::set_operator_(const char* value) {
  
  operator__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.order.operator)
}
void order::set_operator_(const char* value, size_t size) {
  
  operator__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.order.operator)
}
::std::string* order::mutable_operator_() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.order.operator)
  return operator__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* order::release_operator_() {
  // @@protoc_insertion_point(field_release:tutorial.order.operator)
  
  return operator__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void order::set_allocated_operator_(::std::string* operator_) {
  if (operator_ != NULL) {
    
  } else {
    
  }
  operator__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operator_);
  // @@protoc_insertion_point(field_set_allocated:tutorial.order.operator)
}

// repeated string code = 5;
int order::code_size() const {
  return code_.size();
}
void order::clear_code() {
  code_.Clear();
}
const ::std::string& order::code(int index) const {
  // @@protoc_insertion_point(field_get:tutorial.order.code)
  return code_.Get(index);
}
::std::string* order::mutable_code(int index) {
  // @@protoc_insertion_point(field_mutable:tutorial.order.code)
  return code_.Mutable(index);
}
void order::set_code(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tutorial.order.code)
  code_.Mutable(index)->assign(value);
}
void order::set_code(int index, const char* value) {
  code_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tutorial.order.code)
}
void order::set_code(int index, const char* value, size_t size) {
  code_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tutorial.order.code)
}
::std::string* order::add_code() {
  // @@protoc_insertion_point(field_add_mutable:tutorial.order.code)
  return code_.Add();
}
void order::add_code(const ::std::string& value) {
  code_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tutorial.order.code)
}
void order::add_code(const char* value) {
  code_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tutorial.order.code)
}
void order::add_code(const char* value, size_t size) {
  code_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tutorial.order.code)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
order::code() const {
  // @@protoc_insertion_point(field_list:tutorial.order.code)
  return code_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
order::mutable_code() {
  // @@protoc_insertion_point(field_mutable_list:tutorial.order.code)
  return &code_;
}

// optional string name = 6;
void order::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& order::name() const {
  // @@protoc_insertion_point(field_get:tutorial.order.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void order::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.order.name)
}
void order::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.order.name)
}
void order::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.order.name)
}
::std::string* order::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.order.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* order::release_name() {
  // @@protoc_insertion_point(field_release:tutorial.order.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void order::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tutorial.order.name)
}

// optional string price = 7;
void order::clear_price() {
  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& order::price() const {
  // @@protoc_insertion_point(field_get:tutorial.order.price)
  return price_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void order::set_price(const ::std::string& value) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.order.price)
}
void order::set_price(const char* value) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.order.price)
}
void order::set_price(const char* value, size_t size) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.order.price)
}
::std::string* order::mutable_price() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.order.price)
  return price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* order::release_price() {
  // @@protoc_insertion_point(field_release:tutorial.order.price)
  
  return price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void order::set_allocated_price(::std::string* price) {
  if (price != NULL) {
    
  } else {
    
  }
  price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price);
  // @@protoc_insertion_point(field_set_allocated:tutorial.order.price)
}

// optional string amount = 8;
void order::clear_amount() {
  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& order::amount() const {
  // @@protoc_insertion_point(field_get:tutorial.order.amount)
  return amount_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void order::set_amount(const ::std::string& value) {
  
  amount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tutorial.order.amount)
}
void order::set_amount(const char* value) {
  
  amount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tutorial.order.amount)
}
void order::set_amount(const char* value, size_t size) {
  
  amount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tutorial.order.amount)
}
::std::string* order::mutable_amount() {
  
  // @@protoc_insertion_point(field_mutable:tutorial.order.amount)
  return amount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* order::release_amount() {
  // @@protoc_insertion_point(field_release:tutorial.order.amount)
  
  return amount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void order::set_allocated_amount(::std::string* amount) {
  if (amount != NULL) {
    
  } else {
    
  }
  amount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), amount);
  // @@protoc_insertion_point(field_set_allocated:tutorial.order.amount)
}

inline const order* order::internal_default_instance() {
  return &order_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tutorial

// @@protoc_insertion_point(global_scope)
